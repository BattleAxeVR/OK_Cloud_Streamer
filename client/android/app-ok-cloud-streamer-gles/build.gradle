//--------------------------------------------------------------------------------------
// Copyright (c) 2024 BattleAxeVR. All rights reserved.
//--------------------------------------------------------------------------------------

plugins {
    id 'com.android.application'
}

def CLOUDXR_AAR_PATH = file("${project.rootDir}/app-ok-cloud-streamer-gles/libs/CloudXR.aar")
def CLOUDXR_ROOT = file("${project.buildDir}/tmp/CloudXR")

def OBOE_SDK_ROOT = file("${buildDir}/Oboe")

android {
    namespace 'com.facebook.igl.shell.openxr.gles'
    compileSdk 33

    defaultConfig {
        applicationId "com.facebook.igl.shell.openxr.gles"
        minSdk 25
        targetSdk 33
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters 'arm64-v8a'
        }
        externalNativeBuild {
            cmake {
                targets 'openxr-gles-Jni'
                cppFlags '-std=c++20'
                arguments '-DIGL_OPENXR_RENDER_SESSION=HelloOpenXRSession', '-DIGL_WITH_OPENXR=ON', '-DIGL_WITH_VULKAN=OFF', '-DIGL_WITH_OPENGLES=ON', '-DIGL_WITH_SAMPLES=ON'
            }
        }
    }

    aaptOptions {
        noCompress 'png', 'ktx', 'data', 'gltf', 'glb', 'obj'
    }

    buildTypes {
        debug {
            sourceSets {
                main {
                    manifest.srcFile '../../src/java/com/battleaxevr/okcloudstreamer/gles/AndroidManifest.xml'
                }
            }
        }
        release {
            sourceSets {
                main {
                    manifest.srcFile '../../src/java/com/battleaxevr/okcloudstreamer/gles/AndroidManifest.xml'
                }
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path file('../../../CMakeLists.txt')
            version '3.22.1'
        }
    }

    sourceSets {
        main.assets.srcDirs += '../../resources/images'
    }

    ndkVersion '25.2.9519653'

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation files("${CLOUDXR_AAR_PATH}")
    //implementation "com.google.oboe:oboe:1.7.0"
}

tasks.register('extractCloudXR', Copy) {
    from zipTree(CLOUDXR_AAR_PATH)
    into CLOUDXR_ROOT
}

tasks.register('extractOboeSDK', Copy) {
    def sourceFile = file("${projectDir}/libs/oboe.aar")
    from zipTree(sourceFile)
    into OBOE_SDK_ROOT
}

preBuild.dependsOn(extractCloudXR)
preBuild.dependsOn(extractOboeSDK)